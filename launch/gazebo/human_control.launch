<launch>
    <!-- Turtlebot Args -->

    <!-- Turtlebot Model -->
    <arg name="model" default="burger"/>
    <env name="TURTLEBOT3_MODEL" value="$(arg model)"/>

    <!-- Turtlebot position (m) -->
    <arg name="turtle_x_pos" default="1.0"/>
    <arg name="turtle_y_pos" default="0.0"/>
    <arg name="turtle_z_pos" default="0.0"/>


    <!-- Camera Args -->

    <!-- Camera position (m) -->
    <arg name="camera_x_pos" default="0.0"/>
    <arg name="camera_y_pos" default="0.0"/>
    <arg name="camera_z_pos" default="2.0"/>

    <!-- Camera orientation (rad) -->
    <!-- <arg name="camera_pitch" default="0.0"/>
    <arg name="camera_yaw" default="0.0"/>
    <arg name="camera_roll" default="0.0"/> -->
    <arg name="camera_pitch" default="1.57"/> <!-- Set pitch to 90 degrees upright -->
    <arg name="camera_roll" default="0.0"/>
    <arg name="camera_yaw" default="0.0"/>


    <!-- Human Model position and orientation (adjusted to be upright) -->
    <arg name="human_x_pos" default="0.0"/>
    <arg name="human_y_pos" default="0.0"/>
    <arg name="human_z_pos" default="1.0"/>
    <arg name="human_pitch" default="0.0"/>
    <arg name="human_yaw" default="0.0"/>
    <arg name="human_roll" default="0.0"/>


  <!-- Load World -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_empty_world.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

    <!-- Spawn Turtlebot -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg turtle_x_pos) -y $(arg turtle_y_pos) -z $(arg turtle_z_pos) -param robot_description" />

    <!-- Spawn Human Camera -->
    <!-- <param name="camera_description" command="$(find xacro)/xacro '$(find FPV-robotics)/urdf/human_camera.urdf'" />
    <node name="spawn_human_camera" pkg="gazebo_ros" type="spawn_model" output="screen" 
    args="-urdf -param camera_description -model human_camera -x $(arg camera_x_pos) -y $(arg camera_y_pos) -z $(arg camera_z_pos) -R $(arg camera_roll) -P $(arg camera_pitch) -Y $(arg camera_yaw)" /> -->
    
   <!-- Spawn Human Model -->
    <param name="human_description" command="$(find xacro)/xacro '$(find FPV-robotics)/urdf/humanSubject06_48dof.urdf'" />
    <node name="spawn_human_model" pkg="gazebo_ros" type="spawn_model" output="screen" 
          args="-urdf -param human_description -model human_model -x $(arg human_x_pos) -y $(arg human_y_pos) -z $(arg human_z_pos) -R $(arg human_roll) -P $(arg human_pitch) -Y $(arg human_yaw)" />


  <!-- TODO: head rolls down the neck when loads in after a few seconds? -->

  <!-- Load head_controllers.yaml to be able to programatically move the human head -->
  <rosparam file="$(find FPV-robotics)/config/head_controllers.yaml" command="load"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
      args="jC1Head_rotx_position_controller jC1Head_roty_position_controller"/>


  <!-- Launch rospy files -->

  <!-- <node pkg="FPV-robotics" type="head_controller.py" name="head_controller" output="screen" >
    <param name="initial_delay" value="10.0"/>
  </node> -->

  <node pkg="FPV-robotics" type="head_controller.py" name="head_controller" output="screen" />
  <node pkg="FPV-robotics" type="detector.py" name="detector" output="screen" />

</launch>